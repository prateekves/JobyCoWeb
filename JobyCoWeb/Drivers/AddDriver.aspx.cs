using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

#region Required Global NameSpaces

using DataAccessLayer;
using EntityLayer;
using SecurityLayer;
using JobyCoWeb.Models;
using System.Data;
using System.Web.Services;

#endregion

namespace JobyCoWeb.Drivers
{
    public partial class AddDriver : System.Web.UI.Page
    {
        #region Required Global Classes

        static clsOperation objOP = new clsOperation();
        static clsDB objDB = new clsDB();
        static clsCryptography objCG = new clsCryptography();
        static ControlModels objCM = new ControlModels();

        #endregion

        protected void Page_Load(object sender, EventArgs e)
        {
            objCM.ResetMessageBar(lblErrMsg);

            if (!IsPostBack)
            {
                #region Menu Items & Page Controls

                objCM.PopulateAccessibleMenuItemsOnHiddenField(hfMenusAccessible);

                string sPagePath = objCM.GetCurrentPageName();
                int iMenuId = Convert.ToInt32(objOP.RetrieveField2FromAlikeField1("Menu_ID", "MenuDetails", "PagePath", sPagePath));
                objCM.PopulatePageControlsOnHiddenField(hfControlsAccessible, iMenuId);

                #endregion

                #region Checking SessionID

                BOLogin ObjLogin = new BOLogin();
                ObjLogin = (BOLogin)Session["Login"];

                if (ObjLogin == null)
                {
                    Response.Redirect("/Login.aspx");
                }
                else
                {
                    string sessionid = ObjLogin.SESSIONID;
                    if (sessionid == "")
                    {
                        Response.Redirect("/Login.aspx");
                    }
                    else
                    {
                        Master.LoggedInUser = objOP.GetUserName(ObjLogin.EMAILID.ToString());

                        try
                        {
                            string sPageName = Request.QueryString["PageName"].Trim();
                            hfPageName.Value = sPageName;
                        }
                        catch { }
                    }
                }

                #endregion

            }
        }

        [WebMethod]
        public static string GetDriverId()
        {
            //return objOP.GetAutoGeneratedValue("DriverId", "Drivers", "DRIV", 9);
            return objOP.GetAutoGeneratedValueClientFormatNew("DriverId", "Drivers", "D", 5);
        }

        [WebMethod]
        public static string checkEmailID(string EmailID)
        {
            string sExists = "False";

            string sOutput = objOP.RetrieveField2FromField1("DriverId", "Drivers", "EmailID", EmailID);
            if (!sOutput.Trim().Equals(string.Empty))
            {
                sExists = "True";
            }

            return sExists;
        }

        [WebMethod]
        public static void AddDriverDetails
            (
            string DriverId,
            string EmailID,
            string Password,
            string Title,
            string FirstName,
            string LastName,
            string DOB,
            string Address,
            string Town,
            string Country,
            string PostCode,
            string Mobile,
            string Landline,

            //Two New Fields Added
            //===========================
            string DriverType,
            string WageType,
            string WarehouseId,
            //===========================

            string Enabled
            )
        {
            EntityLayer.Driver objDriver = new EntityLayer.Driver();

            objDriver.DriverId = DriverId;
            objDriver.EmailID = EmailID;
            objDriver.Password = objCG.getMd5Hash(Password);
            objDriver.Title = Title;
            objDriver.FirstName = FirstName;
            objDriver.LastName = LastName;

            objDriver.DOB = Convert.ToDateTime(DOB,
            System.Globalization.CultureInfo.GetCultureInfo("hi-IN").DateTimeFormat);

            objDriver.Address = Address;
            objDriver.Town = Town;
            objDriver.Country = Country;
            objDriver.PostCode = PostCode;
            objDriver.Mobile = Mobile;
            objDriver.Landline = Landline;

            //Two New Fields Added
            //===========================
            objDriver.DriverType = DriverType;
            objDriver.WageType = WageType;
            objDriver.WarehouseId = WarehouseId;
            //===========================

            objDriver.Enabled = Convert.ToBoolean(Enabled);

            objDB.AddDriver(objDriver);
        }
    }
}